name: CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  actions-timeline:
    needs: [lint, build, unit-test, e2e-test, ct-test, tools]
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - uses: Kesin11/actions-timeline@6aeaf437ef4d950e33d045805e2c0435f0f4ff13 # v1.0.1

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - run: npm run lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          filter: blob:none
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build

      - name: Calcurate hash
        run: |
          set -x
          SHA256_OUTPUT=$(find ./dist -type f -print0 | \
            sort -z | \
            xargs -0 sha256sum | \
            cut -d ' ' -f 1 | \
            sha256sum | \
            cut -d ' ' -f 1)
          set +x
          echo $SHA256_OUTPUT

          if [[ ${{ vars.RECENT_ARTIFACTS_SHA256 }} = $SHA256_OUTPUT ]]; then
            echo "### ✅ No change to the artifacts" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ⚠️ Changes to the artifacts" >> $GITHUB_STEP_SUMMARY
          fi
          echo "||SHA256|" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|" >> $GITHUB_STEP_SUMMARY
          echo "|Recent deployed|\`${{ vars.RECENT_ARTIFACTS_SHA256 }}\`|" >> $GITHUB_STEP_SUMMARY
          echo "|This build|\`${SHA256_OUTPUT}\`|" >> $GITHUB_STEP_SUMMARY

  unit-test:
    name: "Test [Unit]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Unit testing
        run: npm run test:unit
      - name: Test Summary
        uses: test-summary/action@62bc5c68de2a6a0d02039763b8c754569df99e3f # v2.1
        with:
          paths: "test-results/unit.xml"
        if: always()
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
        if: always()

  e2e-test:
    name: "Test [E2E]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Install dependencies
        id: npm-install
        run: |
          npm ci
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.npm-install.outputs.PLAYWRIGHT_VERSION }}
          restore-keys: playwright-

      - name: Install playwright
        run: npx playwright install chromium --with-deps

      - name: E2E testing
        run: npm run test:playwright-e2e
  
      - name: Test Summary
        uses: test-summary/action@62bc5c68de2a6a0d02039763b8c754569df99e3f # v2.1
        with:
          paths: "test-results/e2e.xml"

  ct-test:
    name: "Test [Component]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Install dependencies
        id: npm-install
        run: |
          npm ci
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.npm-install.outputs.PLAYWRIGHT_VERSION }}
          restore-keys: playwright-
  
      - name: Install playwright
        run: npx playwright install chromium --with-deps

      - name: Component testing
        run: npm run test:playwright-ct

      - name: Test Summary
        uses: test-summary/action@62bc5c68de2a6a0d02039763b8c754569df99e3f # v2.1
        with:
          paths: "test-results/ct.xml"

  tools:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tools
    steps: 
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
          cache-dependency-path: 'tools/package-lock.json'
      - name: Install dependencies
        run: npm ci

      - name: Dry run update zenn.json
        run: |
          npx ts-node updateZennJson.ts

      - name: Dry run update hatena_blog.json
        run: |
          npx ts-node updateHatenaBlogJson.ts
