name: CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  actions-timeline:
    needs: [lint, build, unit-test, e2e-test, ct-test, tools]
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - uses: Kesin11/actions-timeline@v1

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - run: bun run lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Calcurate hash
        run: |
          set -x
          SHA256_OUTPUT=$(find ./dist -type f -print0 | \
            sort -z | \
            xargs -0 sha256sum | \
            cut -d ' ' -f 1 | \
            sha256sum | \
            cut -d ' ' -f 1)
          set +x
          echo $SHA256_OUTPUT
          echo "Now SHA256: $SHA256_OUTPUT" >> $GITHUB_STEP_SUMMARY

  unit-test:
    name: "Test [Unit]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Unit testing
        run: bun run test:unit

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "test-results/unit.xml"
        if: always()

      - uses: codecov/codecov-action@v3
        with:
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
        if: always()

  e2e-test:
    name: "Test [E2E]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        id: install-deps
        run: |
          bun install
          PLAYWRIGHT_VERSION=$(jq '.devDependencies["@playwright/test"]' --raw-output package.json)
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.install-deps.outputs.PLAYWRIGHT_VERSION }}
          restore-keys: playwright-

      - name: Install playwright
        run: bunx playwright install chromium --with-deps

      - name: E2E testing
        run: bun run test:playwright-e2e
  
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "test-results/e2e.xml"

  ct-test:
    name: "Test [Component]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        id: install-deps
        run: |
          bun install
          PLAYWRIGHT_VERSION=$(jq '.devDependencies["@playwright/test"]' --raw-output package.json)
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.install-deps.outputs.PLAYWRIGHT_VERSION }}
          restore-keys: playwright-
  
      - name: Install playwright
        run: bunx playwright install chromium --with-deps

      - name: Component testing
        run: bun run test:playwright-ct

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "test-results/ct.xml"

  tools:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tools
    steps: 
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
          cache-dependency-path: 'tools/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Dry run update zenn.json
        run: |
          npx ts-node updateZennJson.ts

      - name: Dry run update hatena_blog.json
        run: |
          npx ts-node updateHatenaBlogJson.ts
