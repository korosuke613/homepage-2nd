name: CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  actions-timeline:
    needs: [lint, build, unit-test, e2e-test, ct-test, vrt, tools, chromatic]
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - uses: Kesin11/actions-timeline@baa62e018ca5504e2d617502ce1eacf9171e757a # v2.0.1

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - run: npm run lint

  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    outputs:
      is_artifacts_changed: ${{ steps.calcurate-hash.outputs.add_label == vars.LABEL_CHANGES }}
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          filter: blob:none

      - name: Restore astro build cache
        uses: actions/cache/restore@v3
        with:
          path: .astro/cache
          key: astro-build-
          restore-keys: astro-build-

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build

      - name: Calcurate hash
        id: calcurate-hash
        run: |
          set -x
          SHA256_OUTPUT=$(find ./dist -type f -print0 | \
            sort --zero-terminated | \
            xargs -0 sha256sum | \
            cut -d ' ' -f 1 | \
            sha256sum | \
            cut -d ' ' -f 1)
          set +x
          echo $SHA256_OUTPUT

          touch ${{ runner.temp }}/tmp_artifacts_result.txt
          if [[ ${{ vars.RECENT_ARTIFACTS_SHA256 }} = $SHA256_OUTPUT ]]; then
            echo "add_label=${{ vars.LABEL_NO_CHANGES }}" >> $GITHUB_OUTPUT
            echo "remove_label=${{ vars.LABEL_CHANGES }}" >> $GITHUB_OUTPUT
            echo "### âœ… No changes to the artifacts" >> ${{ runner.temp }}/tmp_artifacts_result.txt
          else
            echo "add_label=${{ vars.LABEL_CHANGES }}" >> $GITHUB_OUTPUT
            echo "remove_label=${{ vars.LABEL_NO_CHANGES }}" >> $GITHUB_OUTPUT
            echo "### ðŸš¨ Changes to the artifacts" >> ${{ runner.temp }}/tmp_artifacts_result.txt
          fi
          echo "building commit: \`${{ github.sha }}\`" >> ${{ runner.temp }}/tmp_artifacts_result.txt
          echo "||SHA256|" >> ${{ runner.temp }}/tmp_artifacts_result.txt
          echo "|---|---|" >> ${{ runner.temp }}/tmp_artifacts_result.txt
          echo "|Recent deployed|\`${{ vars.RECENT_ARTIFACTS_SHA256 }}\`|" >> ${{ runner.temp }}/tmp_artifacts_result.txt
          echo "|This build|\`${SHA256_OUTPUT}\`|" >> ${{ runner.temp }}/tmp_artifacts_result.txt
          cat ${{ runner.temp }}/tmp_artifacts_result.txt >> $GITHUB_STEP_SUMMARY

      - name: Add label to PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr edit ${{ github.event.number }} --add-label '${{ steps.calcurate-hash.outputs.add_label }}'
          gh pr edit ${{ github.event.number }} --remove-label '${{ steps.calcurate-hash.outputs.remove_label }}'

      - name: Comment artifacts hash to pull request
        uses: thollander/actions-comment-pull-request@1d3973dc4b8e1399c0620d3f2b1aa5e795465308 # v2
        with:
          filePath: ${{ runner.temp }}/tmp_artifacts_result.txt
          comment_tag: artifacts_sha

  vrt:
    name: "Test [VRT]"
    needs: [build]
    permissions:
      actions: read  # required for actions-timeline

    uses: ./.github/workflows/vrt-regression.yaml
    with:
      skip: ${{ needs.build.outputs.is_artifacts_changed != 'true' }}

  unit-test:
    name: "Test [Unit]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Vitest
        uses: actions/cache@v3
        with:
          path: .cache/.vitest
          key: vitest-${{ github.sha }}
          restore-keys: vitest-

      - name: Unit testing
        run: npm run test:unit

      - name: Test Summary
        uses: test-summary/action@62bc5c68de2a6a0d02039763b8c754569df99e3f # v2.1
        with:
          paths: "test-results/unit.xml"
        if: always()

      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
        if: always()

  e2e-test:
    name: "Test [E2E]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Install dependencies
        id: npm-install
        run: |
          npm ci
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.npm-install.outputs.PLAYWRIGHT_VERSION }}
          restore-keys: playwright-

      - name: Install playwright
        run: npx playwright install chromium --with-deps

      - name: E2E testing
        run: npm run test:playwright-e2e
  
      - name: Test Summary
        uses: test-summary/action@62bc5c68de2a6a0d02039763b8c754569df99e3f # v2.1
        with:
          paths: "test-results/e2e.xml"

  ct-test:
    name: "Test [Component]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Install dependencies
        id: npm-install
        run: |
          npm ci
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.npm-install.outputs.PLAYWRIGHT_VERSION }}
          restore-keys: playwright-
  
      - name: Install playwright
        run: npx playwright install chromium --with-deps

      - name: Component testing
        run: npm run test:playwright-ct

      - name: Test Summary
        if: always()
        uses: test-summary/action@62bc5c68de2a6a0d02039763b8c754569df99e3f # v2.1
        with:
          paths: "test-results/ct.xml"

  chromatic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          filter: blob:none

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Publish to Chromatic
        uses: chromaui/action@ad023504f8a7c8bd7f63d0f6775c05357f3a6478 # v10.1.0
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitOnceUploaded: true
          onlyChanged: true
          traceChanged: true
          debug: true

  tools:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tools
    steps: 
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
          cache-dependency-path: 'tools/package-lock.json'
      - name: Install dependencies
        run: npm ci

      - name: Dry run update zenn.json
        run: |
          npx ts-node updateZennJson.ts

      - name: Dry run update hatena_blog.json
        run: |
          npx ts-node updateHatenaBlogJson.ts
