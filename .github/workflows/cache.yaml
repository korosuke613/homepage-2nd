name: Cache

on:
  push:
    branches:
      - main

concurrency:
  group: "cache"
  cancel-in-progress: true

jobs:
  cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: blob:none

      - name: Cache node_modules of root
        uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Install dependencies of root
        id: npm-install
        run: |
          npm ci
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Publish to Chromatic
        uses: chromaui/action@fd0e276c344bab4dc69a023fdf89ffb9b79b3b31 # v11.0.0
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true
          exitOnceUploaded: true
          onlyChanged: true
          traceChanged: true
          debug: true

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.npm-install.outputs.PLAYWRIGHT_VERSION }}
          restore-keys: playwright-

      - name: Install playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps

      - name: Cache astro build
        uses: actions/cache@v4
        with:
          path: .astro/cache
          key: astro-build-${{ github.sha }}
          restore-keys: astro-build-

      - name: Build
        run: npm run build

      - name: Cache Vitest
        uses: actions/cache@v4
        with:
          path: .cache/.vitest
          key: vitest-${{ github.sha }}
          restore-keys: vitest-
      
      - name: Vitest
        run: npm run test:unit

      - name: Cache node_modules of tools
        uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
          cache-dependency-path: 'tools/package-lock.json'

      - name: Install dependencies of tools
        working-directory: tools
        run: |
          npm ci
