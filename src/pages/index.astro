---
import { getCollection } from 'astro:content';

import { RecentBlogs } from '@/partials/RecentBlogs';
import { RecentPickup } from '@/partials/RecentPickup';
import { RecentPosts } from '@/partials/RecentPosts';
import Base from '@/templates/Base.astro';

import SelfIntroduction from '@/templates/SelfIntroduction.astro';
import type { IPost } from '@/types/IArticleFrontmatter';
import { AppConfig } from '@/utils/AppConfig';
import { getSortedBlogData } from '@/utils/Blog';
import { sortByDate, sortByOrder } from '@/utils/Posts';
import { DormitoryIntroduction } from '@/utils/StaticPages';
import { readTags } from '@/utils/Tag';

const tags = await readTags();

const allPosts: IPost[] = await getCollection('posts', ({ data }) => {
  return data.draft !== true;
});
allPosts.push(DormitoryIntroduction);

const nonDraftPosts = allPosts.filter((post) => !post.data.draft);
const sortedPosts = sortByDate(nonDraftPosts);
const lastThreePosts = sortedPosts.slice(0, 3);

const nonDraftPickup = allPosts.filter(
  (post) => post.data.tags.includes('Pickup ⭐️') && !post.data.draft,
);
const sortedPickup = sortByOrder(nonDraftPickup);
const lastThreePickup = sortedPickup.slice(0, 3);

const allBlogs = await getSortedBlogData();
const lastThreeBlogs = allBlogs.slice(0, 3);

const { title } = AppConfig;
const { description } = AppConfig;
---

<Base head={{ title, description }}>
  <SelfIntroduction />
  <RecentPickup postList={lastThreePickup} tags={tags.posts} />
  <RecentPosts postList={lastThreePosts} tags={tags.posts} />
  <RecentBlogs postList={lastThreeBlogs} tags={tags.blogs} />
</Base>
