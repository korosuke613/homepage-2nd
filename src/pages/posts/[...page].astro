---
// import type { CollectionEntry } from 'astro:content';
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";
import Content from "@/templates/Content.astro";
import type {
  ArticleFrontmatterPage,
  IPost,
} from "@/types/IArticleFrontmatter";
import { sortByDate } from "@/utils/Posts";
import { StaticPages } from "@/utils/StaticPages";

export async function getNonDraftPosts() {
  const allPosts: IPost[] = await getCollection(
    "posts",
    ({ data }) => data.draft !== true,
  );
  allPosts.push(...StaticPages);

  return allPosts;
}

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const nonDraftPosts = await getNonDraftPosts();
  const sortedPosts = sortByDate(nonDraftPosts);

  return paginate(sortedPosts, { pageSize: 9 });
}

interface Props {
  page: ArticleFrontmatterPage;
  preTitle?: string | number;
}

const { page, preTitle } = Astro.props as Props;
const nonDraftPosts = await getNonDraftPosts();
---

<meta name="robots" content="noindex" />

<Content
  page={page}
  contentCategory="Posts"
  contentDescription="日々のアクティビティなど"
  preTitle={preTitle}
  contents={nonDraftPosts}
/>
