---
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";
import Post from "@/pages/posts/[...page].astro";
import type {
  ArticleFrontmatterPage,
  IPost,
} from "@/types/IArticleFrontmatter";
import { sortByDate } from "@/utils/Posts";
import { StaticPages } from "@/utils/StaticPages";
import { generateTagsFromMarkdowns } from "@/utils/Tag";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts: IPost[] = await getCollection(
    "posts",
    ({ data }) => data.draft !== true,
  );
  allPosts.push(...StaticPages);
  const tags = Object.keys(generateTagsFromMarkdowns(allPosts));
  const sortedPosts = sortByDate(allPosts);

  return tags.flatMap((tag) => {
    const filteredPosts = sortedPosts.filter((post) =>
      post.data.tags.includes(tag),
    );
    return paginate(filteredPosts, { params: { tag }, pageSize: 9 });
  });
}

interface Props {
  page: ArticleFrontmatterPage;
}

const { page } = Astro.props as Props;
const { tag } = Astro.params;
---

<Post page={page} preTitle={tag} />
