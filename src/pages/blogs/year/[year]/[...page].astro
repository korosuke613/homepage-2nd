---
import type { GetStaticPathsOptions } from "astro";
import Blogs from "@/templates/Blogs.astro";
import type { BlogPage } from "@/types/IBlogPage";
import { getSortedBlogData } from "@/utils/Blog";
import { readYears } from "@/utils/Year";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const sortedBlogs = await getSortedBlogData();

  const years = await readYears();

  return years.blogs.flatMap((year) => {
    const filteredPosts = sortedBlogs.filter((post) => {
      const publishYear = new Date(post.pubDate).getFullYear();
      return publishYear === year;
    });

    return paginate(filteredPosts, {
      params: { year: year.toString() },
      pageSize: 9,
    });
  });
}

interface Props {
  page: BlogPage;
}

const { page } = Astro.props as Props;
const { year } = Astro.params;
---

<meta name="robots" content="noindex" />

<Blogs
  page={page}
  contentCategory="Blogs"
  contentDescription="外部のブログ記事（自動更新）"
  preTitle={year}
/>
